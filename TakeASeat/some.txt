
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["TakeASeat/TakeASeat.csproj", "TakeASeat/"]
RUN dotnet restore "TakeASeat/TakeASeat.csproj"
COPY . .
WORKDIR "/src/TakeASeat"
RUN dotnet build "TakeASeat.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TakeASeat.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TakeASeat.dll"]




FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 9000

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["TakeASeat.csproj", "TakeASeat/"]
RUN dotnet restore "TakeASeat/TakeASeat.csproj"
WORKDIR "/src/TakeASeat"
COPY . .


RUN dotnet build "TakeASeat.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TakeASeat.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TakeASeat.dll"]





FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["TakeASeat.csproj", "TakeASeat/"]
RUN dotnet restore "TakeASeat/TakeASeat.csproj"
COPY . .
WORKDIR /src/TakeASeat
COPY . .
RUN dotnet build "TakeASeat.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TakeASeat.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TakeASeat.dll"]






FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY . .
RUN dotnet restore "TakeASeat.csproj" --disable-parallel
RUN dotnet publish "TakeASeat.csproj" -c Release -o /app --no-restore


FROM mcr.microsoft.com/dotnet/aspnet:6.0
WORKDIR /app
COPY --from=build /app ./

EXPOSE 5000

ENTRYPOINT ["dotnet", "TakeASeat.dll"]
docker run --rm -p 5000:5000 -p 5001:5001 -e ASPNETCORE_HTTP_PORT=https://+:5001 -e ASPNETCORE_URLS=http://+:5000 web-api





version: "3.8"
services:
  
  take_a_seat_backend:
    build:       
      context: ./backend/TakeASeat/TakeASeat
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_HTTPS_PORT=5001
    volumes:
      - .:/backend
    ports:
      - "5000:5000"
      - "5001:5001"
    image: take_a_seat_backend:backend

  take_a_seat_frontend:
    build:
      context: ./frontend/take-a-seat
      dockerfile: Dockerfile
    stdin_open: true    
    ports:
      - 3000:3000
    volumes:
      - react_build:/react/build

  take_a_seat_nginx:
    image: nginx:latest
    ports:
      - 8000:8000
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
    depends_on:
      - take_a_seat_backend
      - take_a_seat_frontend
    restart: always


volumes:
  react_build:


  // buduje 

  FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 5000
EXPOSE 5001

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["TakeASeat/TakeASeat.csproj", "TakeASeat/"]
RUN dotnet restore "TakeASeat/TakeASeat.csproj"
COPY . .
WORKDIR "/src/TakeASeat"
RUN dotnet build "TakeASeat.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TakeASeat.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TakeASeat.dll"]


version: "3.8"
services:
  
  backend:
    build:       
      context: ./backend/TakeASeat/TakeASeat
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - .:/backend
    ports:
      - "5000:5000"
      - "5001:5001"
    image: backend

  eventsDb:
    image: "mcr.microsoft.com/mssql/server:2017-latest"
    container_name: eventsDb
    environment:
        SA_PASSWORD: "Password123"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"

/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'Password123'